-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

-- Quartus Prime generated Memory Initialization File (.mif)

WIDTH=9;
DEPTH=128;

ADDRESS_RADIX=UNS;
DATA_RADIX=OCT;

CONTENT BEGIN
	%  write Hex5 = 5 %
	0    :   100 005 150 405 505; 


	%   R0 = 001, R5= &127 (177 in octa), *R5 = R0, R5 = *R5   %
	%											  %
	5    :   100 002 150 177 505 455; 
	% get n which is r5 from ld r0, ry  %
	
	% loop(r5): R1=1,R2=outer_n,R3=inner_n,R5=n %
	11    :   110 001 025 047 035 067 331 676 321 674;

	% call: clearAllHex(): and go back to line 24 %
	% R6 = 40, PC goto 100 %
	21	: 160 32 150 144 075;
	
	%  write Hex4 = 4 %
	26 : 100 004 150 404 505; %30%
	
	% get_n(): %
	31: 100 002 150 177 505 455;


	

	
	
	% jump to end program % 
	% no need to execute this function zone %
	98: 170 175;

	% clearAllHex(): to zero line 144(oct) %
	%  go to line inside R6 after done     %
	100 : 100 000 150 405 505 150 404 505 150 403 505 150 402 505 150 401 505 150 400 505 076; %120%
	
	125: 170;
	126: 175; % infinite loop%
	127: 000; % temp variable don't go to here !!! %
END;
